@import "exports";

.full-screen {
	height: 100vh;
	overflow: hidden;
}

.panel {
	padding: 1.2rem;

	border: solid 1px @color-border;
	background-color: @color-panel-background;
	box-shadow: 0 0 3px fade(@color-border, 50%);

	&.compact {
		padding: 0;
	}

	&.large-padding {
		padding: 3rem;
	}

	&.round {
		border-radius: 1rem;
	}
}

.segment:not(:last-child) {
	margin-bottom: 1.5rem;
	padding-bottom: 1.5rem;
	border-bottom: solid 1px @color-border;
}

h1, h2, h3, h4, h5, h6 {
	&.compact {
		margin: 0;
	}
}

hr {
	border: 0 solid @color-border;
	border-bottom-width: 1px;
}

.input, input {
	padding: .5em;
	min-width: 0; //去掉谷歌浏览器的最小宽度

	outline: none;
	border: solid 1px @color-border;
	border-radius: 4px;
	color: inherit;
	background: transparent;

	transition: box-shadow .2s;

	// TODO: 高亮样式跟按钮的有点像，能不能通用一下
	&:hover {
		outline: 0;
		border-color: #209cee;
	}

	// 一些模仿 input 样式的复合组件使用 focus-within
	&:focus-within {
		outline: 0;
		border-color: #209cee;
		box-shadow: 0 0 0 .2rem #a8e8ff;
	}

	&[type=color] {
		cursor: pointer;
		height: 2rem;
	}

	&[disabled] {
		border-color: #e1e6e6;
		background-color: #f5f5f5;
		box-shadow: none;
		cursor: default;
	}
}

.minor-text {
	color: @color-text-minor;
}

.highlight {
	.highlight-color(@color-link, @color-link);

	&:hover {
		text-decoration: underline;
	}

	&.error {
		.highlight-color(#f94f55, #f94f55);
	}

	&.pink {
		.highlight-color(white, #ff72ae);
	}
}

.meta {
	margin-right: 1em;

	& > i {
		margin-right: .2em;
	}
}

// 下面的垂直按钮组display是flex，这里并不需要，但是统一下是否更好？
.btn-group {

	& > .kx-btn + .kx-btn {
		margin-left: 10px;
	}

	&.compact > .kx-btn {
		&:not(:last-child) {
			margin: 0;
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
		}

		&:not(:first-child) {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;

			margin-left: 1px;
			margin-right: 0;

			&.outline {
				margin-left: -1px;
			}
		}
	}
}

.vertical-btn-group {
	display: flex;
	flex-direction: column;

	& > .kx-btn + .kx-btn {
		margin-top: 10px;
	}

	&.compact > .kx-btn {

		&:not(:last-child) {
			border-bottom-left-radius: 0;
			border-bottom-right-radius: 0;
		}

		&:not(:first-child) {
			border-top-left-radius: 0;
			border-top-right-radius: 0;

			// TODO: 默认按钮是outline样式的却没有class
			margin-top: 1px;

			&.outline {
				margin-top: -1px;
			}
		}
	}
}

.full-percent {
	.size(100%);
}

// Vue2 没有 Fragment，所以只能用 display: contents 来模拟了
.fragment {
	display: contents;
}

.inline {
	display: inline-block;
}

.clean-list {
	margin: 0;
	padding-left: 0;
	list-style: none;
}

/**
 * 这几个属性写一大堆，而且还挺常用，所以提取出来了。
 * 使用方通常需要设置下 z-index，还有可能需要覆盖 position。
 */
.full-vertex {
	position: absolute;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
}

// 禁止换行, 文本溢出省略号显示 (一行)
.ellipsis {
	white-space: normal;
	word-break: break-all;
	text-overflow: ellipsis;
	overflow: hidden;
}

// 用于点击的元素，指针为手指样式、并禁止选取
.click-item {
	cursor: pointer;
	user-select: none;
}
